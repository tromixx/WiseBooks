@page
@model WiseBooks.Pages.IndexModel
@{
    ViewData["Title"] = "WiseBooks - Trading Dashboard";
}

<div class="container-fluid trading-dashboard">
    <!-- Dashboard Header -->
    <div class="row dashboard-header mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4">WiseBooks Trading Dashboard</h1>
            <p class="lead">Real-time market analysis at your fingertips</p>
        </div>
    </div>

    <!-- Key Metrics Dashboard -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">MARA</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Marathon Digital</h6>
                    <div class="metric-value">$18.75</div>
                    <div class="metric-change positive">+2.34%</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">Gap %</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Today's Opening</h6>
                    <div class="metric-value">4.27%</div>
                    <div class="metric-change positive">Bullish</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">Volume</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Today's Activity</h6>
                    <div class="metric-value">12.4M</div>
                    <div class="metric-change neutral">+34% avg</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">Range</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Yesterday's</h6>
                    <div class="metric-value">$17.2-$18.1</div>
                    <div class="metric-change">5.2% range</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Chart -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card chart-card">
                <div class="card-body">
                    <h5 class="card-title">MARA - 5 Day Price Action</h5>
                    <div class="chart-container" style="position: relative; height:400px; width:100%">
                        <canvas id="priceChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Secondary Charts - Removed in script -->
    <div class="row" id="secondaryCharts">
        <div class="col-md-6">
            <div class="card chart-card">
                <div class="card-body">
                    <h5 class="card-title">Volume Analysis</h5>
                    <div class="chart-container" style="position: relative; height:250px; width:100%">
                        <canvas id="volumeChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card chart-card">
                <div class="card-body">
                    <h5 class="card-title">Relative Strength</h5>
                    <div class="chart-container" style="position: relative; height:250px; width:100%">
                        <canvas id="rsiChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
<style>
    .trading-dashboard {
        padding: 20px;
        background-color: #f8f9fa;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        padding: 20px;
        border-radius: 8px;
    }
    
    .metric-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        height: 100%;
    }
    
    .metric-card:hover {
        transform: translateY(-5px);
    }
    
    .metric-value {
        font-size: 24px;
        font-weight: bold;
        margin: 10px 0;
    }
    
    .metric-change {
        font-size: 14px;
    }
    
    .positive {
        color: #28a745;
    }
    
    .negative {
        color: #dc3545;
    }
    
    .neutral {
        color: #6c757d;
    }
    
    .chart-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }
    
    .card-title {
        color: #343a40;
        font-weight: 600;
    }

    .chart-container {
        min-height: 250px;
    }
</style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Clean up storage to prevent errors
            try {
                // Clear IndexedDB databases
                if (window.indexedDB && indexedDB.databases) {
                    indexedDB.databases().then(dbs => {
                        dbs.forEach(db => {
                            indexedDB.deleteDatabase(db.name);
                        });
                    }).catch(e => console.log("IndexedDB cleanup error:", e));
                }
                
                // Clear other storage
                localStorage.clear();
                sessionStorage.clear();
            } catch (e) {
                console.log("Storage cleanup error:", e);
            }

            // Simple mock data
            const dates = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];
            const closingPrices = [16.80, 17.50, 17.90, 18.50, 18.40];
            
            // Calculate min/max for Y-axis bounds
            const minPrice = Math.min(...closingPrices) - 0.5;
            const maxPrice = Math.max(...closingPrices) + 0.5;
            
            // Update metrics
            document.querySelector('.metric-value').textContent = `$${closingPrices[closingPrices.length-1]}`;
            
            // Main Price Chart
            const priceCtx = document.getElementById('priceChart').getContext('2d');
            const priceChart = new Chart(priceCtx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'MARA Closing Price',
                        data: closingPrices,
                        borderColor: 'rgba(0, 123, 255, 1)',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        borderWidth: 2,
                        tension: 0.3,
                        fill: true,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'MARA Weekly Performance'
                        },
                        legend: {
                            display: true,
                            position: 'top'
                        }
                    },
                    interaction: {
                        mode: 'index',
                        intersect: false
                    },
                    scales: {
                        y: {
                            beginAtZero: false,
                            suggestedMin: minPrice,
                            suggestedMax: maxPrice,
                            ticks: {
                                stepSize: 0.5,
                                callback: function(value) {
                                    return `$${value.toFixed(2)}`;
                                }
                            },
                            title: {
                                display: true,
                                text: 'Price ($)'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Day'
                            }
                        }
                    }
                }
            });

            // Remove secondary charts
            document.getElementById('secondaryCharts').remove();

            // Handle window resize
            window.addEventListener('resize', function() {
                priceChart.resize();
            });
        });
    </script>
}