@page
@model WiseBooks.Pages.IndexModel
@{
    ViewData["Title"] = "WiseBooks - Trading Dashboard";
}

<div class="container-fluid trading-dashboard">
    <!-- Dashboard Header -->
    <div class="row dashboard-header mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4">WiseBooks Trading Dashboard</h1>
            <p class="lead">Real-time market analysis at your fingertips</p>
        </div>
    </div>

    <!-- Key Metrics Dashboard -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">MARA</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Marathon Digital</h6>
                    <div class="metric-value">$18.75</div>
                    <div class="metric-change positive">+2.34%</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">Gap %</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Today's Opening</h6>
                    <div class="metric-value">4.27%</div>
                    <div class="metric-change positive">Bullish</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">Volume</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Today's Activity</h6>
                    <div class="metric-value">12.4M</div>
                    <div class="metric-change neutral">+34% avg</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card metric-card">
                <div class="card-body">
                    <h5 class="card-title">Range</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Yesterday's</h6>
                    <div class="metric-value">$17.2-$18.1</div>
                    <div class="metric-change">5.2% range</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Chart -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card chart-card">
                <div class="card-body">
                    <h5 class="card-title">MARA - 5 Day Price Action</h5>
                    <canvas id="priceChart" height="400"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Secondary Charts -->
    <div class="row">
        <div class="col-md-6">
            <div class="card chart-card">
                <div class="card-body">
                    <h5 class="card-title">Volume Analysis</h5>
                    <canvas id="volumeChart" height="250"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card chart-card">
                <div class="card-body">
                    <h5 class="card-title">Relative Strength</h5>
                    <canvas id="rsiChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
<style>
    .trading-dashboard {
        padding: 20px;
        background-color: #f8f9fa;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        padding: 20px;
        border-radius: 8px;
    }
    
    .metric-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        height: 100%;
    }
    
    .metric-card:hover {
        transform: translateY(-5px);
    }
    
    .metric-value {
        font-size: 24px;
        font-weight: bold;
        margin: 10px 0;
    }
    
    .metric-change {
        font-size: 14px;
    }
    
    .positive {
        color: #28a745;
    }
    
    .negative {
        color: #dc3545;
    }
    
    .neutral {
        color: #6c757d;
    }
    
    .chart-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }
    
    .card-title {
        color: #343a40;
        font-weight: 600;
    }
</style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@1.0.2"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Mock trading data
            const dates = ['2024-04-15', '2024-04-16', '2024-04-17', '2024-04-18', '2024-04-19'];
            const prices = {
                opens: [16.50, 16.80, 17.50, 18.70, 18.20],
                highs: [17.20, 18.00, 18.10, 19.00, 18.80],
                lows: [15.90, 16.50, 17.20, 18.20, 17.90],
                closes: [16.80, 17.50, 17.90, 18.50, 18.40],
                volumes: [12400000, 9800000, 11200000, 15400000, 10800000]
            };
            
            const yesterdayHigh = 18.10;
            const yesterdayLow = 17.20;
            const yesterdayClose = 17.90;
            const todayOpen = 18.70;
            
            // Main Price Chart
            const priceCtx = document.getElementById('priceChart').getContext('2d');
            new Chart(priceCtx, {
                type: 'candlestick',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'MARA',
                        data: prices.closes.map((close, i) => ({
                            x: dates[i],
                            o: prices.opens[i],
                            h: prices.highs[i],
                            l: prices.lows[i],
                            c: close
                        })),
                        color: {
                            up: '#28a745',
                            down: '#dc3545',
                            unchanged: '#6c757d',
                        }
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: false,
                            title: {
                                display: true,
                                text: 'Price ($)'
                            }
                        }
                    },
                    plugins: {
                        annotation: {
                            annotations: {
                                line1: {
                                    type: 'line',
                                    yMin: yesterdayHigh,
                                    yMax: yesterdayHigh,
                                    borderColor: 'rgba(40, 167, 69, 0.5)',
                                    borderWidth: 2,
                                    borderDash: [6, 6],
                                    label: {
                                        content: 'Yesterday High',
                                        enabled: true,
                                        position: 'right'
                                    }
                                },
                                line2: {
                                    type: 'line',
                                    yMin: yesterdayLow,
                                    yMax: yesterdayLow,
                                    borderColor: 'rgba(220, 53, 69, 0.5)',
                                    borderWidth: 2,
                                    borderDash: [6, 6],
                                    label: {
                                        content: 'Yesterday Low',
                                        enabled: true,
                                        position: 'right'
                                    }
                                },
                                line3: {
                                    type: 'line',
                                    yMin: yesterdayClose,
                                    yMax: yesterdayClose,
                                    borderColor: 'rgba(0, 123, 255, 0.5)',
                                    borderWidth: 2,
                                    borderDash: [6, 6],
                                    label: {
                                        content: 'Yesterday Close',
                                        enabled: true,
                                        position: 'right'
                                    }
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const data = context.raw;
                                    return [
                                        `Open: $${data.o}`,
                                        `High: $${data.h}`,
                                        `Low: $${data.l}`,
                                        `Close: $${data.c}`
                                    ];
                                }
                            }
                        }
                    }
                }
            });
            
            // Volume Chart
            const volumeCtx = document.getElementById('volumeChart').getContext('2d');
            new Chart(volumeCtx, {
                type: 'bar',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Volume',
                        data: prices.volumes,
                        backgroundColor: prices.closes.map((close, i) => 
                            close > prices.opens[i] ? 'rgba(40, 167, 69, 0.7)' : 'rgba(220, 53, 69, 0.7)'
                        ),
                        borderColor: prices.closes.map((close, i) => 
                            close > prices.opens[i] ? 'rgba(40, 167, 69, 1)' : 'rgba(220, 53, 69, 1)'
                        ),
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Volume'
                            }
                        }
                    }
                }
            });
            
            // RSI Chart (mock data)
            const rsiCtx = document.getElementById('rsiChart').getContext('2d');
            new Chart(rsiCtx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'RSI (14)',
                        data: [42, 58, 62, 68, 54],
                        borderColor: 'rgba(0, 123, 255, 1)',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        borderWidth: 2,
                        tension: 0.1,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            min: 0,
                            max: 100,
                            ticks: {
                                stepSize: 10
                            }
                        }
                    },
                    plugins: {
                        annotation: {
                            annotations: {
                                line1: {
                                    type: 'line',
                                    yMin: 70,
                                    yMax: 70,
                                    borderColor: 'rgba(220, 53, 69, 0.5)',
                                    borderWidth: 1,
                                    label: {
                                        content: 'Overbought',
                                        enabled: true
                                    }
                                },
                                line2: {
                                    type: 'line',
                                    yMin: 30,
                                    yMax: 30,
                                    borderColor: 'rgba(40, 167, 69, 0.5)',
                                    borderWidth: 1,
                                    label: {
                                        content: 'Oversold',
                                        enabled: true
                                    }
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}